<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.manager.nacelle_rent.dao.UserMapper">
    <resultMap id="userResultMap" type="com.manager.nacelle_rent.entity.User">
        <result property="userId" column="user_id" />
        <result property="userPassword" column="user_password" />
        <result property="userRole" column="role_id" />
        <result property="userPerm" column="perm_id" />
        <result property="userName" column="user_name" />
        <result property="userPhone" column="user_phone" />
        <result property="userImage" column="user_image" />
        <result property="userAge" column="user_age" />
        <result property="userSex" column="user_sex" />
        <result property="userNative" column="user_native" />
        <result property="userAccount" column="user_account" />
        <result property="isChecked" column="isChecked" />
        <result property="createDate" column="create_date" />
    </resultMap>
    <resultMap id="simpleUserResultMap" type="com.manager.nacelle_rent.entity.SimpleUser">
        <result property="userId" column="user_id" />
        <result property="userName" column="user_name" />
    </resultMap>
    <resultMap id="userCheckedRecordResultMap" type="com.manager.nacelle_rent.entity.UserCheckedRecord">
        <result property="userId" column="user_id" />
        <result property="userRole" column="role_id" />
        <result property="userName" column="user_name" />
        <result property="userPhone" column="user_phone" />
        <result property="createDate" column="create_date" />
        <result property="checkedDate" column="checked_date" />
        <result property="result" column="result" />
        <result property="verifier" column="verifier" />
        <result property="remarks" column="remarks" />
    </resultMap>


    <insert id="createInstaller" parameterType="String">
        INSERT INTO installer_team(project_id, user_id, device_id, name, phone, account_id, start_time)
        VALUES (#{projectId},#{userId},#{deviceId},#{name},#{phone},#{accountId},current_timestamp)
    </insert>

    <select id="sumOfUser" resultType="int">
        SELECT COUNT(*)
        FROM user_info
    </select>

    <select id="getUserById" resultMap="userResultMap" parameterType="String">
        SELECT user_id, user_password, role_id, user_name
        FROM user_info
        WHERE  user_id= #{userId}
    </select>

    <select id="getUserInfo" resultMap="userResultMap" parameterType="String">
        SELECT *
        FROM user_info
        WHERE  user_id= #{userId}
    </select>

    <select id="getNameById" resultMap="simpleUserResultMap" parameterType="String">
        SELECT user_id,user_name
        FROM user_info
        WHERE  user_id= #{userId}
    </select>

    <select id="getUserByPhone" resultMap="userResultMap" parameterType="String">
        SELECT *
        FROM user_info
        WHERE  user_phone= #{userPhone}
    </select>

    <select id="getUserPhoneDepartment" resultMap="userResultMap" parameterType="String">
        SELECT *
        FROM   user_info
        WHERE  INSTR(user_phone,#{userPhone}) > 0
    </select>

    <select id="getUserNameDepartment" resultMap="userResultMap" parameterType="String">
        SELECT *
        FROM   user_info
        WHERE  INSTR(user_name,#{userPhone}) > 0
    </select>

    <select id="getMinId" resultMap="userResultMap">
        SELECT user_id
        FROM user_info
        ORDER BY user_id ASC LIMIT 1
    </select>

    <select id="getAllAreaAdmin" resultMap="userResultMap">
        SELECT user_id, user_name
        FROM user_info
        WHERE role_id = "areaAdmin"
    </select>

    <select id="getAllRentAdmin" resultMap="userResultMap">
        SELECT user_id, user_name
        FROM user_info
        WHERE role_id = "rentAdmin"
    </select>

    <insert id="registerUser" parameterType="com.manager.nacelle_rent.entity.User">
        INSERT INTO
        user_info(user_id, user_name, user_password, role_id, user_phone, user_image, user_age, user_sex, user_native, user_account)
        VALUES (#{userId}, #{userName}, #{userPassword}, #{userRole}, #{userPhone}, #{userImage}, #{userAge}, #{userSex}, #{userNative}, #{userAccount})
    </insert>

    <select id="getRegisterUnChecked" resultMap="userResultMap">
        SELECT user_id, user_name, user_phone, user_image, create_date, role_id, perm_id
        FROM user_info
        WHERE isChecked = 0
    </select>

    <select id="getAllAccount" resultMap="userResultMap">
        SELECT user_id, user_name, user_phone, user_image, role_id
        FROM user_info
        WHERE isChecked = true AND role_id IN ('rentAdmin', 'areaAdmin', 'inspector', 'worker_2', 'worker', 'worker_1', 'worker_3', 'InstallTeam', 'curtain_stoneWorker','curtain_electricWorker','curtain_glassWorker','curtain_glueWorker','coating_painter','coating_realStone','other_others','manager','govAdmin')
    </select>

    <select id="getAllWebAccount" resultMap="userResultMap">
        SELECT user_id, user_name, user_phone, user_image, role_id
        FROM user_info
        WHERE isChecked = true AND role_id IN ('superWebAdmin', 'salesWebAdmin', 'engineeringWebAdmin', 'accountingWebAdmin')
    </select>

    <select id="getRegisterUnCheckedNum" resultType="int">
        SELECT COUNT(*) AS num
        FROM user_info
        WHERE isChecked = false ;
    </select>

    <delete id="deleteUser">
        DELETE FROM user_info
        WHERE user_id in
        <foreach collection="array" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <update id="updateRegisterState">
        UPDATE user_info
        SET isChecked = 1
        WHERE  user_id in
        <foreach collection="array" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="updateQualifications">
        UPDATE user_info
        SET perm_id = #{qualificationImage}
        WHERE  user_id = #{userId}
    </update>

    <update id="updatePassword">
        UPDATE user_info
        SET user_password = #{newPassword}
        WHERE  user_id = #{userId}
    </update>

    <update id="updateUserPhone">
        UPDATE user_info
        SET user_phone = #{phone}
        WHERE  user_id = #{userId}
    </update>

    <update id="updateUserName">
        UPDATE user_info
        SET user_name = #{userName}
        WHERE  user_id = #{userId}
    </update>

    <update id="updateUserRole">
        UPDATE user_info
        SET role_id = #{userRole}
        WHERE  user_id = #{userId}
    </update>

    <update id="updateInstaller">
        UPDATE installer_team
        SET name = #{name}, account_id = #{accountId}
        WHERE  user_id = #{userId} AND device_id = #{deviceId} AND project_id = #{projectId} AND phone = #{phone}
    </update>

    <insert id="createWebAdmin">
        INSERT INTO user_info(role_id,user_name,user_password,user_id,user_phone,isChecked)
        VALUES(#{userRole},#{userName},#{userPassword},#{userId},#{userPhone},#{isChecked})
    </insert>

    <insert id="createManageAdmin">
        INSERT INTO user_info(role_id,user_name,user_password,user_id,user_phone,perm_id,isChecked)
        VALUES(#{userRole},#{userName},#{userPassword},#{userId},#{userPhone},#{userPerm},#{isChecked})
    </insert>

    <insert id="createProjectAdmin">
        INSERT INTO project_admin(project_id,user_id)
        VALUES(#{projectId},#{userId})
    </insert>

    <select id="judgeProAdmin" resultType="String">
        SELECT project_id
        FROM project_admin
        WHERE user_id = #{userId}
    </select>

    <select id="getInstaller" resultType="java.util.HashMap">
        SELECT *
        FROM installer_team
        WHERE project_id = #{projectId} AND user_id = #{userId} AND device_id = #{deviceId}
    </select>

    <select id="getDeviceInstallInfo" resultType="java.util.HashMap">
        SELECT *
        FROM install_info
        WHERE project_id = #{projectId} AND user_id = #{userId} AND device_id = #{deviceId}
    </select>

    <select id="getDeviceInstallInfoByDeviceId" resultType="java.util.HashMap">
        SELECT *
        FROM install_info
        WHERE project_id = #{projectId} AND device_id = #{deviceId}
    </select>

    <select id="getDeviceListByInstaller" resultType="java.util.HashMap">
        SELECT *
        FROM install_info
        WHERE project_id = #{projectId} AND user_id = #{userId}
    </select>

    <select id="getInstallerInfo" resultType="java.util.HashMap">
        SELECT *
        FROM installer_team
        WHERE device_id = #{deviceId} AND user_id = #{userId}
    </select>

    <select id="getInstallCaptainInfo" resultType="java.util.HashMap">
        SELECT *
        FROM install_info
        WHERE device_id = #{deviceId}
    </select>

    <select id="getProjectInstallInfoByProjectId" resultType="java.util.HashMap">
        SELECT *
        FROM install_info
        WHERE project_id = #{projectId}
    </select>

    <select id="getProjectByInstaller" resultType="String">
        SELECT project_id
        FROM install_info
        WHERE user_id = #{userId}
    </select>

    <select id="sumOfDevice" resultType="int">
        SELECT COUNT(*)
        FROM install_info
        WHERE project_id = #{projectId}
    </select>

    <select id="sumOfDeviceUn" resultType="int">
        SELECT COUNT(*)
        FROM install_info
        WHERE project_id = #{projectId} AND flag = 1
    </select>

    <delete id="deleteInstaller">
        DELETE FROM installer_team
        WHERE project_id = #{projectId} AND user_id = #{userId} AND device_id = #{deviceId} AND phone = #{phone}
    </delete>

    <update id="updateAllInstallState">
        UPDATE install_info
        SET flag = #{state}, end_time = current_timestamp
        WHERE  user_id = #{userId} AND device_id = #{deviceId} AND project_id = #{projectId}
    </update>

    <update id="updatePicInstallState">
        UPDATE install_info
        SET pic_flag = #{state}
        WHERE  user_id = #{userId} AND device_id = #{deviceId} AND project_id = #{projectId}
    </update>

    <select id="getAllParts" resultType="java.util.HashMap">
        SELECT *
        FROM electricbox_config
        WHERE device_id = #{deviceId}
    </select>

    <select id="getCameraIdPart" resultType="String" parameterType="String">
        SELECT camera_id
        FROM electricbox_config
        WHERE device_id = #{deviceId}
    </select>

    <select id="getHoistIdPart" resultType="String" parameterType="String">
        SELECT hoist_id
        FROM electricbox_config
        WHERE device_id = #{deviceId}
    </select>

    <select id="getSafeLockIdPart" resultType="String" parameterType="String">
        SELECT safe_lock_id
        FROM electricbox_config
        WHERE device_id = #{deviceId}
    </select>

    <insert id="insertUserCheckedRecord" parameterType="com.manager.nacelle_rent.entity.UserCheckedRecord">
        INSERT INTO
        user_checked_record(user_id, user_name, user_phone, role_id, result, create_date, verifier)
        VALUES (#{userId}, #{userName}, #{userPhone}, #{userRole}, #{result}, #{createDate}, #{verifier})
    </insert>

    <select id="getUserCheckedRecord" resultMap="userCheckedRecordResultMap">
        SELECT *
        FROM user_checked_record
    </select>

</mapper>
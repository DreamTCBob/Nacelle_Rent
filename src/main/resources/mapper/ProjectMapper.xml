<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.manager.nacelle_rent.dao.ProjectMapper">
    <resultMap id="projectResultMap" type="com.manager.nacelle_rent.entity.Project">
        <result property="projectId" column="project_id" />
        <result property="projectName" column="project_name" />
        <result property="projectState" column="project_state" />
        <result property="projectStart" column="project_start" />
        <result property="projectEnd" column="project_end" />
        <result property="projectContractUrl" column="project_contract_url" />
        <result property="projectCertUrl" column="project_cert_url" />
        <result property="projectId" column="project_id"/>
        <result property="adminAreaId" column="admin_area_id" />
        <result property="adminRentId" column="admin_rent_id" />
        <result property="adminProjectId" column="admin_project_id" />
        <result property="worker" column="worker" />
        <result property="boxList" column="boxList" />
        <result property="storeOut" column="store_out" />
        <result property="projectEndUrl" column="project_end_url" />
        <result property="projectBuilders" column="project_builders" />
        <association property="adminAreaUser" javaType="com.manager.nacelle_rent.entity.User">
            <result property="userName" column="user_name"/>
        </association>
    </resultMap>
    <select id="getProjectList" resultMap="projectResultMap" parameterType="int">
        SELECT project_id, project_name, project_state, project_start, project_end, admin_area_id, project_builders, boxList, store_out, project_cert_url
        FROM   project_info
        WHERE  project_state= #{flag}
    </select>

    <select id="getAllProjectByAdmin" resultMap="projectResultMap" parameterType="String">
        SELECT *
        FROM   project_info
        WHERE  admin_area_id= #{adminAreaId}
    </select>

    <select id="getProjectListAll" resultMap="projectResultMap">
        SELECT *
        FROM   project_info
    </select>

    <select id="getProjectId" resultMap="projectResultMap" parameterType="String">
        SELECT project_id
        FROM   project_info
        WHERE  FIND_IN_SET(#{userId},worker)
    </select>

    <select id="getProjectIdByStore" resultMap="projectResultMap" parameterType="String">
        SELECT project_id
        FROM   project_info
        WHERE  FIND_IN_SET(#{storeId},boxList)
    </select>

    <select id="checkStorage" resultMap="projectResultMap" parameterType="String">
        SELECT project_id
        FROM   project_info
        WHERE  FIND_IN_SET(#{storageId},boxList)
    </select>

    <select id="getProjectIdByAdmin" resultMap="projectResultMap" parameterType="String">
        SELECT project_id
        FROM   project_info
        WHERE  admin_rent_id = #{adminRentId}
    </select>

    <select id="getProjectDetail" resultMap="projectResultMap" parameterType="String">
        SELECT *
        FROM (project_info)
        WHERE  project_id= #{projectId}
    </select>

    <insert id="createProject">
        INSERT INTO project_info(project_id,project_name,project_start,project_contract_url,admin_area_id,admin_rent_id)
        VALUES(#{projectId},#{projectName},#{projectStart},#{projectContractUrl},#{adminAreaId},#{adminRentId})
    </insert>

    <update id="updateProject">
        UPDATE project_info
        SET project_id=#{projectId}, project_name=#{projectName}, project_start=#{projectStart},
        project_contract_url=#{projectContractUrl}, admin_area_id=#{adminAreaId}, project_state=#{projectState}
        WHERE project_id= #{projectId}
    </update>

    <update id="increaseBox">
        UPDATE project_info
        SET boxList = #{boxList}
        WHERE project_id= #{projectId}
    </update>

    <update id="updateState">
        UPDATE project_info
        SET project_state = #{projectState}
        WHERE project_id= #{projectId}
    </update>

    <update id="increaseWorker">
        UPDATE project_info
        SET worker = #{userList}
        WHERE project_id= #{projectId}
    </update>

    <update id="installApply">
        UPDATE project_info
        SET project_cert_url = #{projectCertUrl},store_out = #{storeOut}
        WHERE project_id= #{projectId}
    </update>

    <update id="beginProject">
        UPDATE project_info
        SET project_cert_url = #{projectCertUrl}
        WHERE project_id= #{projectId}
    </update>

    <update id="updateProjectEnd">
        UPDATE project_info
        SET project_end_url = #{projectEndUrl}
        WHERE project_id= #{projectId}
    </update>

    <update id="editProjectDepartment">
        UPDATE project_info
        SET admin_area_id = #{adminAreaId},admin_project_id = #{adminProjectId}
        WHERE project_id= #{projectId}
    </update>

    <select id="checkProjectId" resultType="String" parameterType="String">
        SELECT project_id
        FROM project_info
        WHERE  project_id= #{projectId}
    </select>

    <select id="createCompany">
        INSERT INTO company_info(company_name,project_id)
        VALUES (#{companyName},#{projectId})
        ON DUPLICATE KEY UPDATE
        company_name=VALUES(company_name),project_id=VALUES(project_id)
    </select>

    <select id="searchCompany" resultType="String">
        SELECT company_name
        FROM company_info
        WHERE  project_id= #{projectId}
    </select>

    <select id="createConfigurationList">
        INSERT INTO configuration_list(project_id,six_meters_num)
        VALUES (#{projectId},#{sixMetersNum})
        ON DUPLICATE KEY UPDATE
        project_id=VALUES(project_id),six_meters_num=VALUES(six_meters_num)
    </select>

    <select id="getConfigurationList" resultType="int">
        SELECT six_meters_num
        FROM configuration_list
        WHERE  project_id= #{projectId}
    </select>
</mapper>